# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=100000
HISTFILESIZE=1000000
HISTCONTROL=ignorespace
HISTTIMEFORMAT='%F %T '
HISTIGNORE='ls:history:ll'

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

name="$(hostname)"
[ -f ~/.name ] && name=$(cat ~/.name)

PS1='[ \[\033[01;32m\]\u@${name}\[\033[00m\]: \[\033[01;34m\]\W\[\033[00m\]$(__git_ps1) ]\$ '

# use local bin if one exists
if [ -d ~/bin ]; then
	export PATH=$PATH:$HOME/bin
fi

# remove some stty binding
stty stop undef    # ^S
stty start undef   # ^Q
stty discard undef
stty flush undef

export EDITOR="vim"

export SSH_AUTH_SOCK=$HOME/.ssh/.agent.socket
ssh-add -D 2> /dev/null && ssh-add 2> /dev/null
if [[ $? -ne 0 ]]; then
	ssh-agent -a $SSH_AUTH_SOCK > /dev/null
fi

source_if_exits() {
	[ -f $1 ] && source $1
}

if [[ "$(uname)" == "Linux" ]]; then
	source_if_exits /usr/share/git-core/contrib/completion/git-prompt.sh
else
	source_if_exits /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh
fi
source_if_exits ~/.fzf.bash
source_if_exits ~/.files/runcon/shell_functions.sh
source_if_exits ~/.files/runcon/shell_alias.sh
source_if_exits ~/.env # Box secific stuffs.

# Dedup $PATH as it gets really messy!
case ":$PATH:" in
	*":$new_entry:"*) :;;
	*) PATH="$new_entry:$PATH";;
esac

# Remove leading : as that seems to trigger build scripts that
# look for :: in path, which inturn is interpreted as CWD by bash
# zsh which is no-good!
export PATH="$(echo $PATH | perl -pe 's/^://')"
